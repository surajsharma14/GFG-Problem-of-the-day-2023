class Solution {
  public:
    int shortestXYDist(vector<vector<char>> grid, int N, int M) {
       vector<pair<int,int>>x,y;
        int ans=1e9;
        
        //traverse the grid
        for(int p=0;p<N;p++){
            for(int q=0;q<M;q++){
                
                //saving indeces of occourance of X
                if(grid[p][q]=='X'){
                    x.push_back({p,q});
                }
                //saving indeces of occourance of Y
                else if(grid[p][q]=='Y'){
                    y.push_back({p,q});
                }
            }
        }
        
        
        //ans calculation
        for(int p=0;p<x.size();p++){
            for(int q=0;q<y.size();q++){
                ans=min(ans,abs(x[p].first-y[q].first)+abs(x[p].second-y[q].second));
            }
            if(ans==1){
                return ans;
            }
        }
        return ans;
    }
};
