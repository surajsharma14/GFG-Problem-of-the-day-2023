class Solution{
public:
    bool is_prime(int n) {
        if (n <= 1) return false;
        for (int i = 2; i <= sqrt(n); i++) {
            if (n % i == 0) return false;
        }
        return true;
    }
    
    // Function to find the nearest prime number
    int nearest_prime(int n) {
        if (is_prime(n)) return n;
        int prev = n - 1;
        int next = n + 1;
        while (!is_prime(prev) || !is_prime(next)) {
            if (is_prime(prev)) return prev;
            if (is_prime(next)) return next;
            prev--;
            next++;
        }
        return prev;
    }
    Node *primeList(Node *head) {
        Node *temp = head;
        while(temp) {
            int prime = nearest_prime(temp->val);
            temp->val = prime;
            temp = temp->next;
        }
        return head;
    }
};
